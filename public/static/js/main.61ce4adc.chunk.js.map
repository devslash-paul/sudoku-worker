{"version":3,"sources":["state/model.ts","state/actionTypes.ts","ui/Cell.tsx","ui/Board.tsx","state/cellActions.ts","transit.ts","state/default.ts","state/paint.ts","state/history.ts","state/reducer.ts","state/store.ts","ui/HistoryPanel.tsx","ui/History.tsx","ui/sidebar/Controls.tsx","state/sidebarActions.ts","ui/SidePanel.tsx","ui/Skeleton.tsx","ui/ResizeablePanel.tsx","ui/size/sizer.ts","ui/paint/Line.tsx","ui/paint/Painter.tsx","ui/PaintManager.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["State","INSERT","INSERT_SMALL","DELETE","CLEAR_HISTORY","SIDEBAR","NEW","HIGHLIGHT_CHANGE","IMPORT","RESIZE","RESIZE_START","RESIZE_END","PAINT","BEGIN_PAINTING","END_PAINTING","SEND_COORDINATE","style","color","boxSizing","textAlign","background","highlightText","fontWeight","Cell","onMouseover","e","buttons","props","nextProps","this","number","selected","small","size","highlight","ninth","extraStyle","flexBasis","cells","fontSize","height","lineHeight","position","padding","justifyItems","alignItems","inside","getLargeCell","getSmallCell","tryStyle","display","gridTemplateColumns","gridTemplateRows","tabIndex","className","onMouseDown","onClick","shiftKey","onKeyDown","onInput","keyCode","metaKey","onMouseMove","onBlur","map","x","thirdSize","Math","floor","s","gridRow","gridColumn","key","onClickText","Error","ex","Component","onMove","selectedState","setSelected","direction","original","values","next","value","selection","res","Set","add","index","doMove","onDelete","val","shift","meta","onEnterSmallNum","Array","from","onEnterNum","BoardUI","rowStyle","pointerEvents","flexFlow","width","interact","defaultSelectedCell","useState","highlightState","setHighlight","board","cell","mainNum","has","focused","FilteredBoard","connect","main","settings","boardSize","state","NORMAL","dispatch","num","type","insertCell","insertSmallCell","deleteCell","huff","reverse","sparseMap","0","1","2","3","4","5","6","7","encodeFull","cellsFilled","runThrough","i","length","indexOf","nextOne","min","filledVals","filter","reduce","p","n","bn","hex","toString","arr","padEnd","push","substring","btoa","String","fromCharCode","apply","parseInt","replace","bnToB64","BigInt","importFull","idx","boardidx","charAt","undefined","getInitialState","window","location","pathname","startsWith","path","history","pushState","defaultState","frozen","localStorage","getItem","JSON","parse","items","activeItem","paintState","links","paintStart","enableHighlight","paintReducer","action","subtype","PAINTING","doPaint","coordinate","coord","start","subcell","link","end","doSendCoordinate","collapseHistory","events","last","cur","kind","stringify","validStateAction","FROZEN","store","createStore","isPainting","data","freeze","doResize","newCells","large","doInsert","validIdx","adding","forEach","alreadyHas","hist","doInsertSmall","iState","historyItem","newDeleteCells","historyItems","doDelete","doChangeHighlight","fill","doSidebar","isNaN","doImport","doClearHistory","composeWithDevTools","subscribe","setItem","getState","containerStyle","overflowY","overflowX","convert","rows","cols","row","col","EventItem","item","message","createMessage","border","paddingRight","paddingLeft","borderRadius","marginLeft","History","itemCount","itemSize","cellStyle","buttonWidth","boxStyle","margin","flexGrow","topLeft","borderTopLeftRadius","topRight","borderTopRightRadius","ConnectedControls","painting","full","onNew","onChangeHighlight","onSetHighlight","onChangePainting","onImport","addToast","useToasts","vfun","vof","Grid","container","Button","disableElevation","variant","response","prompt","onImportClicked","navigator","clipboard","writeText","host","appearance","autoDismiss","doExport","htmlFor","id","checked","onChange","target","ConnectedPanel","boardCells","clearHistory","href","rel","bodyStyle","minHeight","boardStyle","sidebarStyle","minWidth","Skeleton","side","React","PureComponent","ResizePanel","onDrag","onDragStart","onDragEnd","minConstraints","lockAspectRatio","onResize","onResizeStart","onResizeStop","children","getSmallCoordinatesFromXY","y","xAccrossCell","finalCell","xAccrossSubCell","toCoordinates","coords","largeSize","smallSize","xAccross","yAccross","snapTo","spacing","snap","round","Line","seen","seenStart","seenEnd","startCoords","endCoords","boxSize","centerStartX","centerStartY","centerEndX","centerEndY","startNode","endNode","midPointX","midPointY","d","stroke","defaultStyle","zIndex","lineStyle","setOngoingLine","ongoingLine","SVGElement","rect","getBoundingClientRect","clientX","left","clientY","top","onSvgClick","setLineState","lineState","startLine","commitLine","line","lines","setLine","setLines","Paint","ongoing","ConnectedPainter","enabled","painter","App","Mainboard","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61ce4adc.chunk.js","sourcesContent":["export type CellState = {\n    mainNum: number | null,\n    small: Array<number>\n}\n\nexport enum State {\n    NORMAL=1,\n    FROZEN=2,\n    PAINTING=3\n}\n\n/**\n * All events must be reversible, events that are supported are\n * ADD of large number\n * REMOVAL of large number\n * ADDITION of small numbers (one by one)\n * REMOVAL of small numbers (one by one)\n * ADDITION of small numbers (in batch)\n * REMOVAL of small numbers (in batch)\n */\nexport type AppEvent  ={\n    kind: 'ADD' | 'REMOVE',\n    index: Array<number>,\n    large?: number,\n    small?: Array<number>,\n}\n\nexport type Settings = {\n    state: State,\n    enableHighlight: boolean,\n    boardSize: number\n}\n\nexport type Link = {\n    start: Coordinate, \n    end: Coordinate,\n}\n\nexport type Coordinate = {\n    cell: number;\n    subcell: number;\n}\n\nexport type PaintState = {\n    links: Array<Link>,\n    paintStart: Coordinate | null,\n}\n\nexport type History = {\n    items: Array<AppEvent>,\n    activeItem: number,\n}\n\nexport type AppState = {\n    cells: Array<CellState>,\n    settings: Settings,\n    paintState: PaintState,\n    history: History,\n}","export const SELECT_CELL = \"SELECT_CELL\";\nexport const INSERT = \"INSERT\";\nexport const INSERT_SMALL = \"INSERT_SMALL\";\nexport const DELETE = \"DELETE\";\nexport const DRAG_CELL = \"DRAG_CELL\";\nexport const BLUR_CELL = \"BLUR_CELL\";\n\nexport const CLEAR_HISTORY = \"CLEAR_HISTORY\";\n\nexport const MOVE = \"MOVE\";\n\nexport const CLICK_TEXT = \"CLICK_TEXT\";\nexport const DOUBLE_CLICK_TEXT = \"DOUBLE_CLICK_TEXT\";\n\nexport const SIDEBAR = \"SIDEBAR\";\nexport const NEW = \"NEW\";\nexport const HIGHLIGHT_CHANGE = \"HIGHLIGHT_CHANGE\";\nexport const IMPORT = \"IMPORT\";\n\nexport const RESIZE = \"RESIZE\";\nexport const RESIZE_START = \"RESIZE_START\";\nexport const RESIZE_END = \"RESIZE_END\";\n\nexport const PAINT = \"PAINT\"\nexport const BEGIN_PAINTING = \"BEGIN_PAINING\"\nexport const END_PAINTING = \"END_PAINING\"\nexport const SEND_COORDINATE = \"SEND_COORD\"","import React, { Component } from \"react\";\nimport CSS from \"csstype\";\n\ntype CellProps = {\n  number: number | null;\n  small: Array<number>;\n  cells: number;\n  selected: boolean;\n  focused: boolean;\n  highlight: number | null;\n  size: number;\n  onClick: (meta: boolean) => void;\n  onClickText: (number: number) => void;\n  onInput: (arg0: number, shift: boolean, meta: boolean) => void;\n  onBlur: () => void;\n  onMouseover: () => void;\n};\n\nconst style: CSS.Properties = {\n  color: \"black\",\n  boxSizing: \"border-box\",\n  textAlign: \"center\",\n  background: \"white\",\n};\nconst highlightText: CSS.Properties = {\n  color: \"red\",\n  fontWeight: \"bold\"\n  // background: \"yellow\"\n};\n\nexport class Cell extends Component<CellProps> {\n  shouldComponentUpdate(nextProps: CellProps): boolean {\n    return (\n      this.props.number !== nextProps.number ||\n      this.props.selected !== nextProps.selected ||\n      this.props.small !== nextProps.small ||\n      this.props.size !== nextProps.size ||\n      this.props.highlight !== nextProps.highlight\n    );\n  }\n\n  onMouseover = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (e.buttons && 0x1) {\n      this.props.onMouseover();\n    }\n  };\n\n  render() {\n    const ninth = this.props.size;\n    const extraStyle: CSS.Properties = {\n      ...style,\n      flexBasis: \"calc(100%/\" + this.props.cells + \")\",\n      fontSize: `${ninth - 10}px`,\n      height: `${ninth}px`,\n      lineHeight: `${ninth}px`,\n      position: \"relative\",\n      padding: '2px',\n      justifyItems: 'center',\n      alignItems: 'center',\n      background: this.props.selected ? \"rgba(0,0,255,0.2)\" : \"white\"\n    };\n\n    const inside = this.props.number\n      ? this.getLargeCell()\n      : this.getSmallCell();\n\n    const tryStyle: CSS.Properties = {\n      ...extraStyle,\n      display: 'grid',\n      gridTemplateColumns: '33% 34% 33%',\n      gridTemplateRows: '33% 34% 33%',\n    }\n\n    return (\n      <div\n        tabIndex={0}\n        style={tryStyle}\n        className=\"tile\"\n\n        onMouseDown={e => this.props.onClick(e.shiftKey)}\n        onKeyDown={e => this.props.onInput(e.keyCode, e.shiftKey, e.metaKey)}\n        onMouseMove={this.onMouseover}\n        onBlur={this.props.onBlur}\n      >\n        {inside}\n      </div>\n    );\n  }\n\n  private getSmallCell() {\n    return this.props.small.map(x => {\n      const clickHandler = () => this.props.onClickText(x);\n      const thirdSize = Math.floor(this.props.size / 4);\n      let s: React.CSSProperties = {\n        fontSize: `${thirdSize}px`,\n        height: `${thirdSize}px`,\n        lineHeight: `${thirdSize}px`,\n        gridRow: `${Math.floor((x-1)/3) + 1}`,\n        gridColumn: ((x-1)%3) + 1,\n      };\n      if (this.props.highlight === x) {\n        s = {\n          ...s,\n          ...highlightText\n        };\n      }\n      return (\n        <div key={x} style={s} className=\"smallContent\" onClick={clickHandler}>\n          {x}\n        </div>\n      );\n    });\n  }\n\n  private getLargeCell() {\n    if (this.props.number == null) {\n      throw Error();\n    }\n    const clickHandler = () =>\n      this.props.number && this.props.onClickText(this.props.number);\n    const highlight = this.props.highlight === this.props.number;\n    const style = highlight ? highlightText : {};\n    const ex = {\n      ...style,\n      gridRow: '1/4',\n      gridColumn: '1/4',\n    }\n    return (\n      <div className=\"content\" onClick={clickHandler} style={ex}>\n        {this.props.number}\n      </div>\n    );\n  }\n}\n","import React, { Dispatch, useState } from \"react\";\nimport { AppState, CellState, State } from \"../state/model\";\nimport CSS from \"csstype\";\nimport {\n  insertCell,\n  insertSmallCell,\n  Actions,\n  deleteCell,\n  Direction\n} from \"../state/cellActions\";\nimport { connect } from \"react-redux\";\nimport { Cell } from \"./Cell\";\n\ntype BoardProps = {\n  board: Array<CellState>;\n  size: number;\n  interact: boolean;\n  onEnterNum: (index: number, num: number) => void;\n  onEnterSmallNum: (index: Array<number>, num: number) => void;\n  onDelete: (index: Set<number>) => void;\n};\n\nconst onMove = (\n  selectedState: Set<number>,\n  setSelected: Dispatch<React.SetStateAction<Set<number>>>\n) => {\n  return (direction: Direction) => {\n    if (selectedState.size !== 1) {\n      return;\n    }\n\n    let original = selectedState.values().next().value;\n    let selection = original;\n    switch (direction) {\n      case \"UP\":\n        selection -= 9;\n        break;\n      case \"DOWN\":\n        selection += 9;\n        break;\n      case \"LEFT\":\n        selection -= 1;\n        break;\n      case \"RIGHT\":\n        selection += 1;\n        break;\n    }\n    if (selection <= -1) selection = original;\n    if (selection >= 81) selection = original;\n    const res: Set<number> = new Set();\n    res.add(selection);\n    setSelected(res);\n  };\n};\n\nconst onInput = (\n  index: number,\n  selectedState: Set<number>,\n  doMove: (d: Direction) => void,\n  onDelete: (idx: Set<number>) => void,\n  props: BoardProps\n) => {\n  return (val: number, shift: boolean, meta: boolean) => {\n    if (val === 46 || val === 8) {\n      return onDelete(selectedState);\n    }\n    if(meta) {\n      return;\n    }\n    if ((val >= 49 && val <= 57) || (val >= 97 && val <= 105)) {\n      // we have a number entered. Lets quickly normalize the numpad\n      if (val > 57) {\n        val -= 48;\n      }\n      val -= 48;\n      if (!shift && selectedState.size === 1) {\n        props.onEnterNum(selectedState.values().next().value, val);\n      } else if (shift) {\n        props.onEnterSmallNum(Array.from(selectedState), val);\n      }\n    } else if (val === 8 || val === 46) {\n      return onDelete(selectedState);\n    }\n    if (selectedState.size === 1) {\n      if (val === 38) {\n        return doMove(\"UP\");\n      } else if (val === 37) {\n        return doMove(\"LEFT\");\n      } else if (val === 40) {\n        return doMove(\"DOWN\");\n      } else if (val === 39) {\n        return doMove(\"RIGHT\");\n      }\n    }\n  };\n};\n\ntype Highlight = number | null;\n\nexport const BoardUI = (props: BoardProps) => {\n  const rowStyle: CSS.Properties = {\n    display: \"flex\",\n    pointerEvents: \"all\",\n    flexFlow: \"row wrap\",\n    width: `${props.size}px`,\n    lineHeight: `${props.size}px`\n  };\n  const { interact } = props;\n  const defaultSelectedCell: Set<number> = new Set();\n  const [selectedState, setSelected] = useState(defaultSelectedCell);\n  const [highlightState, setHighlight] = useState<Highlight>(null);\n\n  const board = props.board;\n  let cells = board.map((cell, index) => {\n    const onDrag = () => {\n      if (!interact) {\n        return;\n      }\n      const res = new Set(selectedState);\n      res.add(index);\n      setSelected(res);\n    };\n    const onBlur = () => {\n      if (!interact) {\n        return;\n      }\n      setHighlight(null);\n    };\n    const onClickText = (val: number) => {\n      if (!interact) {\n        return;\n      }\n      setHighlight(val);\n    };\n    const select = (meta: boolean) => {\n      if (!interact) {\n        return;\n      }\n      if (!meta) {\n        const res: Set<number> = new Set();\n        res.add(index);\n        setSelected(res);\n      } else {\n        const res = new Set(selectedState);\n        res.add(index);\n        setSelected(res);\n      }\n    };\n    return (\n      <Cell\n        key={index}\n        number={cell.mainNum}\n        small={cell.small}\n        cells={9}\n        size={props.size / 9}\n        highlight={highlightState}\n        selected={selectedState.has(index)}\n        focused={selectedState.has(index) && selectedState.size === 1}\n        onClickText={onClickText}\n        onClick={select}\n        onBlur={onBlur}\n        onInput={onInput(\n          index,\n          selectedState,\n          onMove(selectedState, setSelected),\n          props.onDelete,\n          props\n        )}\n        onMouseover={onDrag}\n      />\n    );\n  });\n  return (\n    <div tabIndex={1} className=\"box\" style={rowStyle}>\n      {cells}\n    </div>\n  );\n};\n\nconst mapStateToProps = (main: AppState) => {\n  return {\n    board: main.cells,\n    size: main.settings.boardSize,\n    interact: main.settings.state === State.NORMAL\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<Actions>) => {\n  return {\n    onEnterNum: (index: number, num: number) => {\n      dispatch(insertCell(index, num));\n    },\n    onEnterSmallNum: (index: Array<number>, num: number) => {\n      dispatch(insertSmallCell(index, num));\n    },\n    onDelete: (index: Set<number>) => {\n      dispatch(deleteCell(index));\n    }\n  };\n};\n\nexport const FilteredBoard = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoardUI);\n","import {\n  INSERT,\n  INSERT_SMALL,\n  DELETE,\n  DRAG_CELL,\n  SIDEBAR,\n  BLUR_CELL,\n  MOVE,\n  CLICK_TEXT,\n  NEW,\n  HIGHLIGHT_CHANGE,\n  IMPORT,\n  RESIZE,\n  RESIZE_START,\n  PAINT,\n  RESIZE_END,\n  BEGIN_PAINTING,\n  END_PAINTING,\n  SEND_COORDINATE,\n  CLEAR_HISTORY\n} from \"./actionTypes\";\nimport { Coordinate } from \"./model\";\n\nexport type Actions =\n  | InsertEvent\n  | InsertSmallEvent\n  | DeleteEvent\n  | ResizeEvent\n  | SidebarEvent\n  | HighlightChangeEvent\n  | ImportEvent\n  | CoordinateEvent\n  | PaintEvent\n  | ClearHistoryEvent;\n\nexport type CoordinateEvent = {\n  type: typeof SEND_COORDINATE;\n  coordinate: Coordinate;\n};\n\nexport type Direction = \"UP\" | \"DOWN\" | \"LEFT\" | \"RIGHT\";\n\nexport type PaintEvent = {\n  type: typeof PAINT;\n  subtype: typeof BEGIN_PAINTING | typeof END_PAINTING;\n};\nexport type ImportEvent = {\n  type: typeof IMPORT;\n  value: string;\n};\nexport type ClearHistoryEvent = {\n  type: typeof CLEAR_HISTORY;\n}\nexport type SidebarEvent = {\n  type: typeof SIDEBAR;\n  subtype: typeof NEW;\n};\n\nexport type HighlightChangeEvent = {\n  type: typeof HIGHLIGHT_CHANGE;\n  value: boolean;\n};\n\nexport type ClickTextEvent = {\n  type: typeof CLICK_TEXT;\n  index: number;\n  number: number;\n};\n\nexport type MoveEvent = {\n  type: typeof MOVE;\n  direction: Direction;\n};\nexport type BlurEvent = {\n  type: typeof BLUR_CELL;\n  index: number;\n};\nexport type DragCellEvent = {\n  type: typeof DRAG_CELL;\n  index: number;\n};\nexport type InsertSmallEvent = {\n  type: typeof INSERT_SMALL;\n  index: Array<number>;\n  number: number;\n};\nexport type InsertEvent = {\n  type: typeof INSERT;\n  index: number;\n  number: number;\n};\n\nexport type DeleteEvent = {\n  type: typeof DELETE;\n  index: Set<number>;\n};\nexport type ResizeEvent =\n  | {\n      type: typeof RESIZE;\n      size: number;\n    }\n  | {\n      type: typeof RESIZE_START | typeof RESIZE_END;\n    };\n\nexport function resize(size: number): ResizeEvent {\n  return {\n    type: RESIZE,\n    size\n  };\n}\n\nexport function insertCell(index: number, number: number): InsertEvent {\n  return {\n    type: INSERT,\n    index,\n    number\n  };\n}\n\nexport function insertSmallCell(\n  index: Array<number>,\n  number: number\n): InsertSmallEvent {\n  return {\n    type: INSERT_SMALL,\n    number,\n    index\n  };\n}\n\nexport function deleteCell(index: Set<number>): DeleteEvent {\n  return {\n    type: DELETE,\n    index\n  };\n}\n","import { CellState } from './state/model'\n\nconst huff: Record<string, number> = {\n    '000': 0,\n    '1111': 1,\n    '001': 2,\n    '010': 3,\n    '011': 4,\n    '100': 5,\n    '101': 6,\n    '1100': 7,\n    '1101': 8,\n    '1110': 9,\n}\n\nconst reverse: Record<string, string> = {\n    '0': '000',\n    '1': '1111',\n    '2': '001',\n    '3': '010',\n    '4': '011',\n    '5': '100',\n    '6': '101',\n    '7': '1100',\n    '8': '1101',\n    '9': '1110',\n}\n\nconst sparseMap: Record<number, string> = {\n    0: '000',\n    1: '001',\n    2: '010',\n    3: '011',\n    4: '100',\n    5: '101',\n    6: '110',\n    7: '111',\n}\n\nexport function encodeFull(cells: CellState[]) {\n    // algo 2 start\n    const cellsFilled = cells.map(x => x.mainNum == null ? 0 : 1)\n    let runThrough = \"\";\n    let i = 0;\n    while (i < cellsFilled.length) {\n        // if this is a one, add it\n        if (cellsFilled[i] === 1) {\n            runThrough += sparseMap[0]\n            i++;\n        } else {\n            // how many zeros in a row\n            if (cellsFilled.indexOf(1, i) === -1) {\n                // there are no more cells filled. Pick the largest possible\n                let nextOne = Math.min(7, cellsFilled.length - i)\n                runThrough += sparseMap[nextOne]\n                i += nextOne\n            } else {\n                let nextOne = Math.min(cellsFilled.indexOf(1, i), 7)\n                runThrough += sparseMap[nextOne]\n                i += nextOne\n            }\n        }\n        // something went wrong\n        if (i > 90) {\n            break;\n        }\n    }\n    const filledVals = cells.filter(x => x.mainNum != null)\n        .map(x => x.mainNum)\n        .map(x => reverse[\"\" + x])\n        .reduce((p, n) => p + n, \"\")\n    const val2 = BigInt(\"0b\" + runThrough + filledVals)\n    // algo 2 end\n    return bnToB64(val2)\n};\n\nfunction bnToB64(bn: BigInt) {\n    let hex = bn.toString(2);\n    let arr = []\n    if (hex.length % 8 > 0) {\n        hex = hex.padEnd(hex.length + (8 - (hex.length % 8)), \"0\")\n    }\n    for (var i = 0; i < hex.length / 8; i++) {\n        arr.push(hex.substring(i * 8, i * 8 + 8))\n    }\n    var b64encoded = btoa(String.fromCharCode.apply(null, arr.map(x => parseInt(x, 2))));\n\n    return b64encoded.replace(/\\//g, \"-\").replace(/\\+/g, \"_\").replace(/=/g, \"\")\n}\n\nexport function importFull(board: string): CellState[] {\n    const res = (BigInt(\"0x\" + board).toString(2))\n    const arr = new Array(81);\n    let idx = 0;\n    let s = ''\n    let boardidx = 0;\n    while (idx < 81) {\n        s = s + res.charAt(boardidx)\n        boardidx++;\n        if (huff[s] !== undefined) {\n            arr[idx++] = {\n                mainNum: huff[s],\n                small: []\n            }\n            s = ''\n        }\n    }\n    return arr;\n}","import { AppState, State } from \"./model\";\nimport { importFull } from \"../transit\";\n\nexport const getInitialState = () => {\n  if(window.location.pathname.startsWith(\"/share/\")) {\n    let path = window.location.pathname.substring(\"/share/\".length)\n    window.history.pushState({}, \"Sudoku UI\", \"/\")\n    return {\n      ...defaultState, \n      settings: {\n        ...defaultState.settings, \n        frozen: false,\n      },\n      cells: importFull(path)\n    }\n  }\n  const res =localStorage.getItem('state');\n  if (res != null) {\n    return JSON.parse(res);\n  }\n  return {\n    ...defaultState,\n    settings: {\n      ...defaultState.settings,\n      frozen: false // you can never load a frozen state\n    }\n  }\n}\n\nconst defaultState: AppState = {\n  history: {\n    items: [],\n    activeItem: -1,\n  },\n  paintState: {\n    links: [],\n    paintStart: null,\n  },\n  settings: {\n    state: State.NORMAL,\n    enableHighlight: false,\n    boardSize: 450,\n  },\n  cells: [\n    {\n      mainNum: 9,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [2, 1, 3]\n    },\n    {\n      mainNum: null,\n      small: [2, 1, 3]\n    },\n    {\n      mainNum: null,\n      small: [4, 6, 1]\n    },\n    {\n      mainNum: 5,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [4, 1, 7]\n    },\n    {\n      mainNum: null,\n      small: [3, 7]\n    },\n    {\n      mainNum: 8,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [6, 1, 7]\n    },\n    {\n      mainNum: null,\n      small: [1, 3, 5]\n    },\n    {\n      mainNum: 4,\n      small: [4]\n    },\n    {\n      mainNum: 8,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [6, 1, 2]\n    },\n    {\n      mainNum: null,\n      small: [2, 7]\n    },\n    {\n      mainNum: null,\n      small: [1, 2, 7]\n    },\n    {\n      mainNum: 9,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [3, 5, 1]\n    },\n    {\n      mainNum: null,\n      small: [6, 1, 7]\n    },\n    {\n      mainNum: null,\n      small: [7, 1, 5]\n    },\n    {\n      mainNum: 6,\n      small: [6]\n    },\n    {\n      mainNum: null,\n      small: [7, 1, 5]\n    },\n    {\n      mainNum: 3,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [8, 9]\n    },\n    {\n      mainNum: null,\n      small: [8, 9]\n    },\n    {\n      mainNum: 2,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [5, 1]\n    },\n    {\n      mainNum: 4,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [1, 8]\n    },\n    {\n      mainNum: null,\n      small: [1, 2, 3, 8]\n    },\n    {\n      mainNum: null,\n      small: [1, 2, 3]\n    },\n    {\n      mainNum: 7,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [9, 2, 4, 8]\n    },\n    {\n      mainNum: null,\n      small: [1, 9, 2, 4, 8]\n    },\n    {\n      mainNum: null,\n      small: [3, 4]\n    },\n    {\n      mainNum: 6,\n      small: []\n    },\n    {\n      mainNum: 5,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [7, 5, 3, 8]\n    },\n    {\n      mainNum: null,\n      small: [7, 2, 3, 8]\n    },\n    {\n      mainNum: 6,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [5, 2, 4, 8]\n    },\n    {\n      mainNum: null,\n      small: [2, 4, 8]\n    },\n    {\n      mainNum: null,\n      small: [2, 4, 8]\n    },\n    {\n      mainNum: 1,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [3, 4]\n    },\n    {\n      mainNum: 9,\n      small: []\n    },\n    {\n      mainNum: 4,\n      small: []\n    },\n    {\n      mainNum: 9,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [5, 1]\n    },\n    {\n      mainNum: null,\n      small: [1, 5]\n    },\n    {\n      mainNum: 6,\n      small: [6]\n    },\n    {\n      mainNum: 3,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [7, 8]\n    },\n    {\n      mainNum: 2,\n      small: [2]\n    },\n    {\n      mainNum: null,\n      small: [7, 8]\n    },\n    {\n      mainNum: 2,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [3, 7, 8]\n    },\n    {\n      mainNum: 9,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [4, 7, 8]\n    },\n    {\n      mainNum: null,\n      small: [3, 4, 7, 8]\n    },\n    {\n      mainNum: 6,\n      small: []\n    },\n    {\n      mainNum: 5,\n      small: [5]\n    },\n    {\n      mainNum: null,\n      small: [1, 4]\n    },\n    {\n      mainNum: null,\n      small: [1, 8]\n    },\n    {\n      mainNum: null,\n      small: [1, 3, 8]\n    },\n    {\n      mainNum: null,\n      small: [1, 3, 8]\n    },\n    {\n      mainNum: 4,\n      small: []\n    },\n    {\n      mainNum: 9,\n      small: [5]\n    },\n    {\n      mainNum: null,\n      small: [3, 8]\n    },\n    {\n      mainNum: 5,\n      small: [5]\n    },\n    {\n      mainNum: 6,\n      small: []\n    },\n    {\n      mainNum: 7,\n      small: []\n    },\n    {\n      mainNum: 2,\n      small: [2]\n    },\n    {\n      mainNum: 6,\n      small: []\n    },\n    {\n      mainNum: 5,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [7, 8]\n    },\n    {\n      mainNum: null,\n      small: [2, 4, 7, 8]\n    },\n    {\n      mainNum: 1,\n      small: []\n    },\n    {\n      mainNum: null,\n      small: [2, 4, 7, 8]\n    },\n    {\n      mainNum: null,\n      small: [4, 8]\n    },\n    {\n      mainNum: 9,\n      small: [2]\n    },\n    {\n      mainNum: 3,\n      small: []\n    }\n  ],\n};\n","import { AppState, State } from \"./model\";\nimport { PaintEvent, Actions, CoordinateEvent } from \"./cellActions\";\nimport {\n  BEGIN_PAINTING,\n  PAINT,\n  END_PAINTING,\n  SEND_COORDINATE\n} from \"./actionTypes\";\n\nexport function paintReducer(state: AppState, action: Actions): AppState {\n  switch (action.type) {\n    case PAINT:\n      return doPaint(state, action);\n    case SEND_COORDINATE:\n      return doSendCoordinate(state, action);\n  }\n  return {\n    ...state\n  };\n}\n\nfunction doSendCoordinate(state: AppState, action: CoordinateEvent) {\n  // we have to check the coordinate has a small in it\n  const cell = state.cells[action.coordinate.cell];\n  const small = cell.small;\n  const coord = action.coordinate;\n  const start = state.paintState.paintStart;\n  if (\n    start == null ||\n    cell.mainNum != null ||\n    small.indexOf(action.coordinate.subcell + 1) === -1\n  ) {\n    return state;\n  }\n  if (action.coordinate === state.paintState.paintStart) {\n    // Lets flip the color, or cancel if nothing there.\n    const links = [...state.paintState.links];\n    return {\n      ...state,\n      paintState: {\n        ...state.paintState,\n        links,\n        paintStart: null\n      }\n    };\n  }\n  const link = {\n    start: start,\n    end: coord\n  };\n  return {\n    ...state,\n    paintState: {\n      ...state.paintState,\n      links: [...state.paintState.links, link],\n      paintStart: null\n    }\n  };\n}\n\nfunction doPaint(state: AppState, action: PaintEvent): AppState {\n  switch (action.subtype) {\n    case BEGIN_PAINTING:\n      return {\n        ...state,\n        settings: {\n          ...state.settings,\n          state: State.PAINTING\n        }\n      };\n    case END_PAINTING:\n      return {\n        ...state,\n        settings: {\n          ...state.settings,\n          state: State.NORMAL\n        },\n        paintState: {\n          links: [],\n          paintStart: null\n        }\n      };\n  }\n}\n","import { AppEvent } from \"./model\";\n\nexport const collapseHistory = (events: Array<AppEvent>) => {\n    let last: AppEvent | null = null;\n    let res: Array<AppEvent> = [];\n    if (events.length === 0) {\n        return [];\n    }\n\n    for (let i = 0; i < events.length; i++) {\n        if (last === null) {\n            last = events[i]\n            continue\n        }\n        let cur = events[i]\n        if (last.kind === cur.kind && JSON.stringify(last.small) === JSON.stringify(cur.small)) {\n            last = {\n                ...last,\n                index: [...last.index, ...cur.index]\n            }\n        } else {\n            res.push(last)\n            last = cur;\n        }\n    }\n    if (last !== null) {\n        res.push(last)\n    }\n    return res;\n}\n\nexport const collapseUndo = (events: Array<AppEvent>) => {\n    // this can only happen on the last two\n    if (events.length < 2) {\n        return events;\n    }\n\n    var last = events[events.length - 1]\n    var snd = events[events.length - 2]\n\n    if ((last.kind === \"ADD\" && snd.kind === \"REMOVE\") ||\n        (last.kind === \"REMOVE\" && snd.kind === \"ADD\")) {\n        if (last.large === snd.large && JSON.stringify(last.small) === JSON.stringify(snd.small)\n            && JSON.stringify(last.index) === JSON.stringify(snd.index)) {\n            // they're an undo of the other\n            return events.slice(0, events.length - 2)\n        }\n    }\n    return events\n}","import { AppState, State, AppEvent } from \"./model\";\nimport {\n  Actions,\n  InsertSmallEvent,\n  SidebarEvent,\n  DeleteEvent,\n  ResizeEvent\n} from \"./cellActions\";\nimport { getInitialState } from \"./default\";\nimport {\n  SIDEBAR,\n  NEW,\n  HIGHLIGHT_CHANGE,\n  IMPORT,\n  RESIZE,\n  RESIZE_START,\n  RESIZE_END,\n  PAINT,\n  INSERT_SMALL,\n  INSERT,\n  DELETE,\n  CLEAR_HISTORY\n} from \"./actionTypes\";\nimport { paintReducer } from \"./paint\";\nimport { collapseHistory } from \"./history\";\n\nconst validStateAction = (state: State, action: Actions) => {\n  switch (state) {\n    case State.NORMAL:\n      // All things can happen when state is normal\n      return true;\n    case State.FROZEN:\n      return (\n        action.type === RESIZE ||\n        action.type === RESIZE_END ||\n        action.type === RESIZE_START\n      );\n  }\n  return true;\n};\n\nfunction isPainting(state: AppState, action: Actions) {\n  return state.settings.state === State.PAINTING || action.type === PAINT;\n}\n\nexport function AppReducer(\n  state: AppState = getInitialState(),\n  action: Actions\n): AppState {\n  if (!validStateAction(state.settings.state, action)) {\n    return state;\n  }\n\n  if (isPainting(state, action)) {\n    return paintReducer(state, action);\n  }\n\n  switch (action.type) {\n    case RESIZE:\n    case RESIZE_START:\n    case RESIZE_END:\n      return doResize(state, action);\n    case INSERT:\n      return doInsert(state, action.index, action.number);\n    case INSERT_SMALL:\n      return doInsertSmall(state, action);\n    case DELETE:\n      return doDelete(state, action);\n    case HIGHLIGHT_CHANGE:\n      return doChangeHighlight(state, action.value);\n    case SIDEBAR:\n      return doSidebar(state, action);\n    case IMPORT:\n      return doImport(state, action.value);\n    case CLEAR_HISTORY: \n      return doClearHistory(state);\n    default:\n      return state;\n  }\n}\n\nfunction doClearHistory(state: AppState) : AppState {\n  return {\n    ...state,\n    history: {\n      items: [],\n      activeItem: -1\n    }\n  }\n}\n\nfunction doResize(state: AppState, data: ResizeEvent): AppState {\n  if (data.type === RESIZE) {\n    return {\n      ...state,\n      settings: {\n        ...state.settings,\n        boardSize: data.size\n      }\n    };\n  }\n  const freeze = data.type === RESIZE_START;\n  return {\n    ...state,\n    settings: {\n      ...state.settings,\n      state: freeze ? State.FROZEN : State.NORMAL\n    }\n  };\n}\n\nfunction doInsert(state: AppState, idx: number, value: number): AppState {\n  // only works with a single selection\n  const newCells = [...state.cells];\n  const cell = newCells[idx];\n\n  if(cell.mainNum === value) {\n    // no op\n    return state;\n  }\n\n  newCells[idx] = { ...cell, mainNum: value };\n  const history: Array<AppEvent> = [...state.history.items, { kind: \"ADD\", large: value, index: [idx] }]\n  return { ...state, cells: newCells, history: {\n    items: history,\n    activeItem: history.length - 1\n  } };\n}\n\nfunction doImport(state: AppState, value: string): AppState {\n  let cells = new Array(81);\n  for (let i = 0; i < 81; i++) {\n    if (value.charAt(i) !== \"0\" && !isNaN(parseInt(value.charAt(i)))) {\n      cells[i] = { mainNum: parseInt(value.charAt(i)), small: [] };\n    } else {\n      cells[i] = { mainNum: null, small: [] };\n    }\n  }\n  return {\n    ...state,\n    cells\n  };\n}\n\nfunction doChangeHighlight(state: AppState, value: boolean): AppState {\n  return {\n    ...state,\n    settings: {\n      ...state.settings,\n      enableHighlight: value\n    }\n  };\n}\n\nfunction doSidebar(state: AppState, action: SidebarEvent): AppState {\n  switch (action.subtype) {\n    case NEW:\n      const newCells = new Array(81).fill({ mainNum: null, small: [] });\n      return {\n        ...state,\n        cells: newCells,\n        history: {items: [], activeItem: -1}\n      };\n  }\n}\n\nfunction doInsertSmall(state: AppState, action: InsertSmallEvent) : AppState {\n  const cells = [...state.cells];\n  const validIdx = action.index.filter(x => cells[x].mainNum == null)\n  const adding = validIdx\n    .map(x => cells[x].small.indexOf(action.number) === -1)\n    .reduce((p, n) => p || n, false);\n\n  validIdx.forEach(index => {\n    const alreadyHas = cells[index].small.indexOf(action.number) !== -1;\n    if (adding && !alreadyHas) {\n      cells[index] = {\n        ...cells[index],\n        small: [...cells[index].small, action.number]\n      };\n    } else if (!adding && alreadyHas) {\n      cells[index] = {\n        ...cells[index],\n        small: cells[index].small.filter(s => s !== action.number)\n      };\n    }\n  });\n  const hist: Array<AppEvent> = validIdx.map(i => {\n    return {\n      kind: adding ? \"ADD\": \"REMOVE\",\n      index: [i],\n      small: [action.number]\n    }\n  })\n  const history = [...state.history.items, ...collapseHistory(hist)];\n  return {\n    ...state, \n    cells: [...cells],\n    history: {\n      items: history,\n      activeItem: history.length - 1,\n    }\n  };\n}\n\nfunction doDelete(state: AppState, action: DeleteEvent) {\n  let iState = [...state.cells];\n  let historyItem: Array<AppEvent> = [];\n  action.index.forEach(idx => {\n    let deleteCell = state.cells[idx];\n    const newDeleteCells = [...iState];\n    if (deleteCell.mainNum == null) {\n      historyItem.push({kind: \"REMOVE\", index: [idx], small: deleteCell.small})\n      deleteCell = {\n        ...deleteCell,\n        small: []\n      };\n    } else {\n      historyItem.push({kind: \"REMOVE\", index: [idx], large: deleteCell.mainNum})\n      deleteCell = {\n        ...deleteCell,\n        mainNum: null\n      };\n    }\n    newDeleteCells[idx] = deleteCell;\n    iState = [...newDeleteCells];\n  });\n  const historyItems: Array<AppEvent> = [...state.history.items, ...collapseHistory(historyItem)]\n\n  return {\n    ...state,\n    cells: iState,\n    history: {\n      ...state.history,\n      items: historyItems,\n      activeItem: historyItems.length - 1\n    },\n  };\n}\n","import { AppReducer } from \"./reducer\";\nimport { createStore } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport const store = createStore(\n  AppReducer,\n  composeWithDevTools()\n);\n\nstore.subscribe(() => localStorage.setItem(\"state\", JSON.stringify(store.getState())));","import React, { CSSProperties } from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { AppEvent } from '../state/model'\nimport CSS from 'csstype';\n\nexport type HistoryPanelProps = {\n    events: Array<AppEvent>\n}\n\nconst containerStyle: CSS.Properties = {\n    height: '145px',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    background: 'white',\n    boxSizing: 'border-box',\n}\n\nfunction convert(num: number[]) {\n    // if they're all in a col or a row, we can do some nice things\n    // otherwise fall back to long form\n    let rows = new Set<number>();\n    let cols = new Set<number>();\n    let res: Array<string> = []\n    num.forEach(n => {\n        const row = Math.floor(n / 9) + 1;\n        const col = n % 9 + 1;\n        rows.add(row)\n        cols.add(col)\n        res.push(`r${row}c${col}`)\n    })\n    if (rows.size === 1) {\n        // we only added to one row\n        const arr = Array.from(cols.values())\n            .map(x => \"\" + x)\n            .reduce((p, n) => p + n, \"\")\n        return `r${rows.values().next().value}c${arr}`\n    }\n    else if (cols.size === 1) {\n        // we only added to one row\n        const arr = Array.from(rows.values())\n            .map(x => \"\" + x)\n            .reduce((p, n) => p + n, \"\")\n        return `r${arr}c${cols.values().next().value}`\n    }\n    return res\n}\n\nconst createMessage = (item: AppEvent) => {\n    switch (item.kind) {\n        case 'ADD':\n            if (item.large) {\n                return <><AddCircleIcon /> {item.large} to {convert(item.index)}</>\n            }\n            if (item.small) {\n                return <><AddCircleIcon /> {item.small} as pencil marks to cell {convert(item.index)}</>\n            }\n            break;\n        case 'REMOVE':\n            if (item.large) {\n                return <><RemoveCircleIcon /> {item.large} to cell {convert(item.index)}</>\n            }\n            if (item.small) {\n                return <><RemoveCircleIcon /> {item.small} as pencil marks to cell {convert(item.index)}</>\n            }\n    }\n}\n\nconst EventItem = ({ item, style }: { item: AppEvent, style: CSSProperties }) => {\n    const message = createMessage(item);\n    const def: CSS.Properties = {\n        display: 'flex',\n        border: '1px solid black',\n        alignItems: 'center',\n        paddingRight: '5px',\n        paddingLeft: '2px',\n        borderRadius: '2px',\n        boxSizing: 'border-box',\n    }\n    return <div style={{...def, ...style}}>\n        {message}\n        <ReplayIcon style={{ marginLeft: 'auto' }} />\n    </div>\n}\n\nexport const HistoryPanel = (props: HistoryPanelProps) => {\n    const Row = ({ index, style }: {index: number, style: CSSProperties}) => (\n        <EventItem style={style} item={props.events[index]} />\n    );\n    return <List \n        height={150}\n        itemCount={props.events.length}\n        itemSize={35}\n        width={\"100%\"}\n        style={containerStyle}>\n        {Row}\n    </List>\n}","import { connect } from \"react-redux\";\nimport { HistoryPanel } from './HistoryPanel'\nimport { AppState } from \"../state/model\";\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        events: [...state.history.items].reverse()\n    }\n}\n\nexport const History = connect(mapStateToProps)(HistoryPanel)","import React, { Dispatch } from \"react\";\nimport { encodeFull } from \"../../transit\";\nimport { connect } from \"react-redux\";\nimport { AppState, State, Settings } from \"../../state/model\";\nimport { Actions } from \"../../state/cellActions\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport CSS from \"csstype\";\nimport { Cell } from \"../Cell\";\nimport { useToasts } from \"react-toast-notifications\";\nimport {\n  onNew,\n  onSetHighlight,\n  onChangePainting,\n  onImport\n} from \"../../state/sidebarActions\";\n\nconst buttonWidth = 33;\nconst cellStyle: CSS.Properties = {\n  boxSizing: \"border-box\",\n  background: \"white\",\n  height: buttonWidth + \"px\",\n  width: buttonWidth + \"px\",\n  border: \"1px solid black\",\n  lineHeight: buttonWidth + \"px\",\n  fontSize: buttonWidth / 1.2 + \"px\"\n};\n\nconst boxStyle: CSS.Properties = {\n  margin: \"0px\",\n  borderRadius: \"0\",\n  background: '#f2f2f2',\n  boxSizing: \"border-box\",\n  flexGrow: 1,\n};\nconst topLeft: CSS.Properties = {\n  borderTopLeftRadius: \"10px\",\n};\nconst topRight: CSS.Properties = {\n  borderTopRightRadius: \"10px\",\n};\n\nconst onImportClicked = (doImport: (e1: string) => void) => {\n  const response = window.prompt(\"Please enter the sodoku: \");\n  if (response !== null) {\n    doImport(response);\n  }\n};\n\nconst doExport = (addToast: any, board: () => string) => {\n  navigator.clipboard.writeText(window.location.host + \"/share/\" + board());\n  addToast(\"URL copied to clipboard\", {\n    appearance: \"info\",\n    autoDismiss: true\n  });\n};\n\ntype ControlProps = {\n  painting: boolean;\n  settings: Settings;\n\n  full: () => string;\n  onNew: () => void;\n  onChangeHighlight: (e1: boolean) => void;\n  onChangePainting: (e1: boolean) => void;\n  doImport: (board: string) => void;\n};\n\nconst Controls = (props: ControlProps) => {\n  const { addToast } = useToasts();\n  const vfun = (e: any) => {};\n  const vof = () => {};\n\n  return (\n    <>\n      <Grid container>\n        <Button\n          disableElevation\n          style={{ ...boxStyle, ...topLeft }}\n          variant=\"outlined\"\n          onClick={props.onNew}\n        >\n          New\n        </Button>\n        <Button\n          disableElevation\n          style={boxStyle}\n          variant=\"outlined\"\n          onClick={e => onImportClicked(props.doImport)}\n        >\n          Import\n        </Button>\n        <Button\n          disableElevation\n          style={{ ...boxStyle, ...topRight }}\n          variant=\"outlined\"\n          onClick={() => doExport(addToast, props.full)}\n        >\n          Share\n        </Button>\n      </Grid>\n      <Grid container>\n        <Button disableElevation variant=\"outlined\" style={boxStyle}>\n          Undo\n        </Button>\n        <Button disableElevation variant=\"outlined\" style={boxStyle}>\n          Redo\n        </Button>\n      </Grid>\n      <Grid>\n        <Button variant=\"outlined\" style={boxStyle} disableElevation>\n          <span style={cellStyle}>\n            <div>1</div>\n          </span>\n        </Button>\n        <Button variant=\"outlined\" style={boxStyle} disableElevation>\n          <Cell\n            number={null}\n            small={[1, 2, 3, 4, 5, 6, 7, 8, 9]}\n            selected={false}\n            focused={false}\n            size={buttonWidth}\n            cells={1}\n            highlight={null}\n            onClick={vfun}\n            onClickText={vfun}\n            onBlur={vof}\n            onMouseover={vof}\n            onInput={vfun}\n          />\n        </Button>\n      </Grid>\n      <div>\n        <label htmlFor=\"highlight\">Enable Highlights</label>\n        <input\n          id=\"highlight\"\n          type=\"checkbox\"\n          checked={props.settings.enableHighlight}\n          onChange={e => props.onChangeHighlight(e.target.checked)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"painting\">Enable Painting</label>\n        <input\n          id=\"painting\"\n          type=\"checkbox\"\n          checked={props.painting}\n          onChange={e => props.onChangePainting(e.target.checked)}\n        />\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (main: AppState) => ({\n  painting: main.settings.state === State.PAINTING,\n  settings: main.settings,\n  full: () => encodeFull(main.cells)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<Actions>) => ({\n  onNew: () => dispatch(onNew()),\n  onChangeHighlight: (value: boolean) => dispatch(onSetHighlight(value)),\n  onChangePainting: (value: boolean) => dispatch(onChangePainting(value)),\n  doImport: (value: string) => dispatch(onImport(value))\n});\n\nexport const ConnectedControls = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Controls);\n","import { SidebarEvent, HighlightChangeEvent, ImportEvent, PaintEvent, ClearHistoryEvent } from \"./cellActions\";\nimport { SIDEBAR, NEW, HIGHLIGHT_CHANGE, IMPORT, BEGIN_PAINTING, END_PAINTING, PAINT, CLEAR_HISTORY } from \"./actionTypes\";\n\nexport function onNew() :SidebarEvent{\n    return {\n        type: SIDEBAR, \n        subtype: NEW,\n    }\n}\n\nexport function onSetHighlight(value: boolean): HighlightChangeEvent {\n    return {\n        type: HIGHLIGHT_CHANGE,\n        value,\n    }\n}\n\nexport function onImport(value: string): ImportEvent {\n    return {\n        type: IMPORT,\n        value\n    }\n}\n\nexport function onChangePainting(value: boolean): PaintEvent {\n    return {\n        type: PAINT,\n        subtype: value ? BEGIN_PAINTING: END_PAINTING,\n    }\n}\nexport function clearEvents(): ClearHistoryEvent {\n    return {\n        type: CLEAR_HISTORY,\n    }\n}","import React, { Dispatch } from \"react\";\nimport LayersClearIcon from '@material-ui/icons/LayersClear';\nimport { connect } from \"react-redux\";\nimport { AppState, CellState } from \"../state/model\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  clearEvents\n} from \"../state/sidebarActions\";\nimport { Actions } from \"../state/cellActions\";\nimport { BoardUI } from \"./Board\";\nimport { History } from './History';\nimport { ConnectedControls } from \"./sidebar/Controls\";\n\ntype SidebarProps = {\n  board: string;\n  boardCells: Array<CellState>;\n\n  clearHistory: () => void;\n};\n\n\nconst Sidebar = (props: SidebarProps) => {\n  const vfun = (e: any) => {};\n\n  return (\n    <div>\n      <ConnectedControls />\n\n      <h5>Saved Boards</h5>\n      <Button variant=\"contained\" color=\"primary\">\n        Save\n      </Button>\n      <BoardUI\n        board={props.boardCells}\n        interact={false}\n        size={200}\n        onEnterNum={vfun}\n        onEnterSmallNum={vfun}\n        onDelete={vfun}\n      />\n      <h5>History <LayersClearIcon onClick={props.clearHistory}/></h5>\n      <History />\n      <h5>External resources</h5>\n      <a\n        href={\"https://www.sudokuwiki.org/sudoku.html?db=\" + props.board}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Sudoku Wiki\n      </a>\n    </div>\n  );\n};\n\nconst encodeBoard = (cells: CellState[]) => {\n  return cells.map(x => x.mainNum || \"0\").reduce((p, n) => p + n, \"\");\n};\n\nconst mapStateToProps = (main: AppState) => {\n  return {\n    board: encodeBoard(main.cells),\n    boardCells: main.cells,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<Actions>) => {\n  return {\n    clearHistory: () => dispatch(clearEvents()),\n  };\n};\n\nexport const ConnectedPanel = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar);\n","import React from \"react\";\nimport CSS from \"csstype\";\n\nexport type SkeletonProps = {\n  board: JSX.Element;\n  side: JSX.Element;\n};\n\nconst bodyStyle: CSS.Properties = {\n  display: \"flex\",\n  minHeight: \"100%\"\n};\n\nconst boardStyle: CSS.Properties = {\n  position: \"relative\",\n  padding: \"20px\"\n};\n\nconst sidebarStyle = {\n  background: \"rgb(170, 170, 170)\",\n  padding: \"20px\",\n  width: \"22%\",\n  minWidth: \"270px\"\n};\n\nexport class Skeleton extends React.PureComponent<SkeletonProps> {\n  render() {\n    return (\n      <div style={bodyStyle}>\n        <div style={sidebarStyle}>{this.props.side}</div>\n        <div style={boardStyle}>{this.props.board}</div>\n      </div>\n    );\n  }\n}\n","import React, { Dispatch, SyntheticEvent } from \"react\";\nimport { AppState } from \"../state/model\";\nimport { connect } from \"react-redux\";\nimport { Actions, resize } from \"../state/cellActions\";\nimport { ResizableBox, ResizeCallbackData } from \"react-resizable\";\nimport { RESIZE_START, RESIZE_END } from \"../state/actionTypes\";\n\ntype ResizePanelProps = {\n  size: number;\n  children: Array<JSX.Element>;\n  onDrag: (arg0: SyntheticEvent, data: ResizeCallbackData) => void;\n  onDragStart: (arg0: SyntheticEvent, data: ResizeCallbackData) => void;\n  onDragEnd: (arg0: SyntheticEvent, data: ResizeCallbackData) => void;\n};\n\nfunction ResizePanelUI(props: ResizePanelProps): JSX.Element {\n  return (\n    <ResizableBox\n      width={props.size}\n      height={props.size}\n      minConstraints={[450, 450]}\n      lockAspectRatio={true}\n      onResize={props.onDrag}\n      onResizeStart={props.onDragStart}\n      onResizeStop={props.onDragEnd}\n    >\n      {props.children}\n    </ResizableBox>\n  );\n}\n\nconst mapStateToProps = (main: AppState) => {\n  return {\n    size: main.settings.boardSize\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<Actions>) => {\n    return {\n        onDrag: (e: SyntheticEvent, data: ResizeCallbackData) => {\n            dispatch(resize(data.size.width))\n        },\n        onDragStart: (e: SyntheticEvent, data: ResizeCallbackData) => {\n            dispatch({\n                type: RESIZE_START\n            })\n        },\n        onDragEnd: (e: SyntheticEvent, data: ResizeCallbackData) => {\n            dispatch({\n                type: RESIZE_END\n            })\n        }\n    }\n}\n\nexport const ResizePanel = connect(mapStateToProps, mapDispatchToProps)(ResizePanelUI);\n","import { Coordinate } from \"../../state/model\";\n\nexport const getSmallCoordinatesFromXY = (\n  size: number,\n  x: number,\n  y: number\n): Coordinate => {\n  const cell = size / 9;\n  const subcell = cell / 3;\n  const xAccrossCell = Math.floor(x / cell);\n  const yAccrossCell = Math.floor(y / cell);\n  const finalCell = yAccrossCell * 9 + xAccrossCell;\n\n  const xAccrossSubCell = Math.floor((x / subcell) % 3);\n  const yAccrossSubCell = Math.floor((y / subcell) % 3);\n  const finalSub = yAccrossSubCell * 3 + xAccrossSubCell;\n  return {\n    cell: finalCell,\n    subcell: finalSub\n  };\n};\n\nexport const toCoordinates = (size: number, coords: Coordinate) => {\n  const { cell, subcell } = coords;\n  const largeSize = size / 9;\n  const smallSize = largeSize / 3;\n  // to find out the X we need the cell mod 9\n  let xAccross = (cell % 9) * largeSize;\n  xAccross += (subcell % 3) * smallSize + smallSize / 2;\n  let yAccross = Math.floor(cell / 9) * largeSize;\n  yAccross += Math.floor(subcell / 3) * smallSize + smallSize / 2;\n  return [xAccross, yAccross];\n};\n\nexport const snapTo = (size: number, x: number, y: number) => {\n  // snap to the closest\n  let spacing = size / (9 * 3);\n  let snap = spacing;\n\n  const x1 = Math.round((x - spacing * 0.5) / snap) * snap + spacing * 0.5;\n  const y1 = Math.round((y - spacing * 0.5) / snap) * snap + spacing * 0.5;\n\n  return [x1, y1];\n};\n","import { Coordinate } from \"../../state/model\";\nimport { toCoordinates } from \"../size/sizer\";\nimport React from \"react\";\n\nexport const Line = ({\n  start,\n  end,\n  seen,\n  size\n}: {\n  start: Coordinate;\n  end: Coordinate;\n  seen: Set<Coordinate>;\n  size: number;\n}) => {\n  const seenStart = seen.has(start);\n  const seenEnd = seen.has(end);\n  const startCoords = toCoordinates(size, start);\n  const endCoords = toCoordinates(size, end);\n  const boxSize = size / 9 / 4;\n  const centerStartX = startCoords[0] - boxSize / 2;\n  const centerStartY = startCoords[1] - boxSize / 2;\n  const centerEndX = endCoords[0] - boxSize / 2;\n  const centerEndY = endCoords[1] - boxSize / 2;\n  const startNode = seenStart ? null : (\n    <rect\n      x={centerStartX}\n      y={centerStartY}\n      width={boxSize * 0.8}\n      height={boxSize * 0.9}\n      fill=\"rgba(174, 214, 157, 0.2)\"\n      style={{ pointerEvents: \"none\" }}\n    />\n  );\n  const endNode = seenEnd ? null : (\n    <rect\n      x={centerEndX}\n      y={centerEndY}\n      width={boxSize * 0.8}\n      height={boxSize * 0.9}\n      fill=\"rgba(245, 240, 129, 0.2)\"\n      style={{ pointerEvents: \"none\" }}\n    />\n  );\n\n  const midPointX = (startCoords[0] + endCoords[0]) / 2;\n  const midPointY = (startCoords[1] + endCoords[1]) / 2;\n  // const rise = Math.abs(midPointY - endCoords[1]);\n  // const run = Math.abs(midPointX - endCoords[0]);\n  // const angle = -run / rise;\n  return (\n    <g>\n      <path\n        d={`M ${startCoords[0]} ${startCoords[1]} Q ${midPointX} ${midPointY}\n        ${endCoords[0]} ${endCoords[1]}`}\n        fill=\"transparent\"\n        stroke=\"#0000ffaa\"\n        style={{ pointerEvents: \"none\" }}\n      />\n      {startNode}\n      {endNode}\n    </g>\n  );\n};\n","import React, { useState, Dispatch } from \"react\";\nimport CSS from \"csstype\";\nimport { connect } from \"react-redux\";\nimport { AppState, Coordinate, Link, CellState } from \"../../state/model\";\nimport {\n  getSmallCoordinatesFromXY,\n  toCoordinates,\n  snapTo\n} from \"../size/sizer\";\nimport { Line } from \"./Line\";\n\nconst defaultStyle: CSS.Properties = {\n  position: \"absolute\",\n  zIndex: 2\n};\n\nconst lineStyle: CSS.Properties = {\n  pointerEvents: \"none\",\n  stroke: \"green\"\n};\n\nexport type PaintProps = {\n  size: number;\n  board: Array<CellState>;\n};\n\ntype LineCoordinates = {\n  start: Coordinate;\n  end: Coordinate;\n};\ntype OngoingLine = {\n  start: Coordinate;\n  x: number;\n  y: number;\n} | null;\n\nexport const PaintUI = (props: PaintProps) => {\n  const { size } = props;\n\n  const [lineState, setLineState] = useState<Array<LineCoordinates>>([]);\n  const [ongoingLine, setOngoingLine] = useState<OngoingLine>(null);\n\n  const lines = lineState.map(x => (\n    <Line seen={new Set()} size={size} start={x.start} end={x.end} />\n  ));\n  let ongoing = <></>;\n  if (ongoingLine) {\n    const [x, y] = toCoordinates(size, ongoingLine.start);\n    ongoing = (\n      <path\n        d={`M ${x} ${y} L ${ongoingLine.x} ${ongoingLine.y}`}\n        style={lineStyle}\n      />\n    );\n  }\n\n  return (\n    <svg\n      width={props.size}\n      height={props.size}\n      style={defaultStyle}\n      onClick={onSvgClick(\n        size,\n        props.board,\n        setLineState,\n        setOngoingLine,\n        lineState,\n        ongoingLine\n      )}\n      onMouseMove={onMove(size, setOngoingLine, ongoingLine)}\n    >\n      {lines}\n      {ongoing}\n    </svg>\n  );\n};\n\ntype SvgClick = React.MouseEvent<SVGElement>;\ntype StateDispatch<T> = Dispatch<React.SetStateAction<T>>;\n\nconst onMove = (\n  size: number,\n  setOngoingLine: StateDispatch<OngoingLine>,\n  ongoingLine: OngoingLine\n) => (e: SvgClick) => {\n  if (!(e.target instanceof SVGElement)) {\n    return;\n  }\n  if (ongoingLine?.start) {\n    const rect = e.target.getBoundingClientRect();\n    const [x, y] = snapTo(size, e.clientX - rect.left, e.clientY - rect.top);\n    setOngoingLine({\n      ...ongoingLine,\n      x,\n      y\n    });\n  }\n};\n\nconst onSvgClick = (\n  size: number,\n  board: Array<CellState>,\n  setLineState: StateDispatch<Array<Link>>,\n  setOngoingLine: StateDispatch<OngoingLine>,\n  lineState: Array<Link>,\n  ongoingLine: OngoingLine\n) => (e: SvgClick) => {\n  if (ongoingLine == null) {\n    return startLine(size, e, setOngoingLine, board);\n  } else {\n    // then we're looking for a second click\n    return commitLine(\n      size,\n      e,\n      ongoingLine,\n      lineState,\n      setOngoingLine,\n      setLineState,\n      board\n    );\n  }\n};\n\nconst commitLine = (\n  size: number,\n  e: SvgClick,\n  line: OngoingLine,\n  lines: Array<Link>,\n  setLine: StateDispatch<OngoingLine>,\n  setLines: StateDispatch<Array<Link>>,\n  board: Array<CellState>\n) => {\n  if (!(e.target instanceof SVGElement)) {\n    return;\n  }\n\n  const target = e.target;\n  const rect = target.getBoundingClientRect();\n  const [x, y] = snapTo(size, e.clientX - rect.left, e.clientY - rect.top);\n  const coord: Coordinate = getSmallCoordinatesFromXY(size, x, y);\n  const small = board[coord.cell].small;\n  const correctClick = small.indexOf(coord.subcell + 1) !== -1;\n  if (correctClick && line !== null) {\n    // commit the click and reset the line\n    const next: Link = {\n      start: line.start,\n      end: coord\n    };\n    setLines([...lines, next]);\n    setLine(null);\n  }\n};\n\nconst startLine = (\n  size: number,\n  e: SvgClick,\n  setLine: StateDispatch<OngoingLine>,\n  board: Array<CellState>\n) => {\n  if (!(e.target instanceof SVGElement)) {\n    return;\n  }\n  const target = e.target;\n  const rect = target.getBoundingClientRect();\n  const [x, y] = snapTo(size, e.clientX - rect.left, e.clientY - rect.top);\n  const coord = getSmallCoordinatesFromXY(size, x, y);\n  const small = board[coord.cell].small;\n  const correctClick = small.indexOf(coord.subcell + 1) !== -1;\n  if (correctClick) {\n    setLine({\n      start: coord,\n      x: x,\n      y: y\n    });\n  }\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    size: state.settings.boardSize,\n    board: state.cells\n  };\n};\n\nexport const Paint = connect(mapStateToProps)(PaintUI);\n","import React from \"react\";\nimport { Paint } from \"./paint/Painter\";\nimport { connect } from \"react-redux\";\nimport { AppState, State } from \"../state/model\";\n\nexport type Paint = {\n  cell: number;\n  subcell: number;\n  color_start: string;\n  color_end: string;\n  color_line: string;\n};\n\nexport type PaintManagerProps = {\n  size: number;\n  enabled: boolean;\n};\n\nexport const PaintManager = (props: PaintManagerProps) => {\n  const { enabled } = props;\n  if (!enabled) {\n    return <></>;\n  }\n  const painter = <Paint />;\n  return <div>{painter}</div>;\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  enabled: state.settings.state === State.PAINTING,\n  size: state.settings.boardSize\n});\n\nexport const ConnectedPainter = connect(mapStateToProps)(PaintManager);\n","import React from \"react\";\nimport \"./App.css\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { FilteredBoard } from \"./ui/Board\";\nimport { store } from \"./state/store\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedPanel } from \"./ui/SidePanel\";\nimport { Skeleton } from \"./ui/Skeleton\";\nimport { ResizePanel } from \"./ui/ResizeablePanel\";\nimport { ConnectedPainter } from \"./ui/PaintManager\";\n\nconst App: React.FC = () => {\n  const Mainboard = (\n    <ResizePanel>\n      <ConnectedPainter />\n      <FilteredBoard />\n    </ResizePanel>\n  );\n\n  return (\n    <Provider store={store}>\n      <ToastProvider>\n        <Skeleton board={Mainboard} side={<ConnectedPanel />} />\n      </ToastProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}